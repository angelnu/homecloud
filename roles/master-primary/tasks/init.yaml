- name: Configure Kubelet
  copy:
    content: |
      [Service]
      Environment="KUBELET_EXTRA_ARGS={{ KUBELET_OPTS }}"
      ExecStart=
      ExecStart=/usr/bin/kubelet $KUBELET_EXTRA_ARGS
    dest: /etc/systemd/system/kubelet.service.d/01-ansible.conf
  register: result

- name: Create checkpoint directory
  file:
    path: "{{KUBELET_CHECKPOINT_PATH}}"
    state: directory
    mode: "u=rwx,g=rx,o=rx"

- name: Restart Kubelet
  systemd:
    name: kubelet
    state: restarted
    enabled: yes
    daemon_reload: yes
  when: result.changed

- name: Initialize Kubernetes cluster
  shell: "kubeadm init {{KUBEADM_OPTS| default('')}} --token {{ token }} --node-name={{inventory_hostname}} --apiserver-cert-extra-sans=127.0.0.1,{% for host in groups['masters'] %}{{ hostvars[host]['inventory_hostname'] }}{% if not loop.last %},{% endif %}{% endfor %}"
  #shell: "kubeadm init --token {{ token }} --pod-network-cidr={{cidr}} --node-name={{inventory_hostname}}"

# - name: Install Networking Pods
#   shell: curl -sSL 'https://github.com/coreos/flannel/blob/master/Documentation/kube-flannel.yml?raw=true' | sed 's/amd64/{{arch}}/g' | kubectl create -f -
#   args:
#     warn: false
#   environment: "{{kube_cfg_env}}"
#   register: install_network_result
#   failed_when:
#   - "'AlreadyExists' not in install_network_result.stderr"
#   - install_network_result.rc != 0
#   changed_when: "'AlreadyExists' not in install_network_result.stderr"

- name: Adding network backend - Weave Net
  #shell: "kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.1.3/weave-daemonset.yaml"
  #shell: "kubectl apply -f https://cloud.weave.works/k8s/v1.7/net"
  shell: kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"
  environment: "{{kube_cfg_env}}"

- name: Allow work to be dispatched to master
  shell: "kubectl taint nodes {{inventory_hostname}}  node-role.kubernetes.io/master:NoSchedule-"
  environment: "{{kube_cfg_env}}"
  register: remove_taint_result
  failed_when:
  - "'not found' not in remove_taint_result.stderr"
  - remove_taint_result.rc != 0

- import_tasks: ../master-settle/main.yaml

#- name: Remove 'NodeRestriction' from apiserver
#  command: "perl -pi -e 's/.*--admission-control=.*/    - --admission-control=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota,DefaultTolerationSeconds/' /etc/kubernetes/manifests/kube-apiserver.yaml"

- name: Convert etcd to cluster
  import_tasks: etcd.yaml

- import_tasks: ../master-settle/main.yaml

- name: Self-hosted Kubernetes cluster
  shell: kubeadm alpha phase selfhosting convert-from-staticpods

- name: "Enable apiserver checkpointing"
  shell: "kubectl -n kube-system annotate pods $(kubectl get pods -n kube-system | awk '/self-hosted-kube-apiserver/ {print $1;exit}') node.kubernetes.io/bootstrap-checkpoint='true'"
  environment: "{{kube_cfg_env}}"

- import_tasks: ../master-settle/main.yaml
