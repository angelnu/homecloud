#- name: Install etcd cluster
#  shell: curl -sSL 'https://kubernetes.io/docs/admin/high-availability/etcd.yaml' | sed 's/${DISCOVERY_TOKEN}/https:\/\/discovery.etcd.io\/1da962678f678d5abc16626094cab6a1/g' | sed 's/${NODE_NAME}/{{inventory_hostname}}/g' | sed 's/${NODE_IP}/{{inventory_hostname}}/g' > /etc/kubernetes/manifests/etcd.yaml
#  args:
#    warn: false
#  environment: "{{kube_cfg_env}}"
#  register: install_network_result

# - name: Update etcd configuration
#   blockinfile:
#     path: "{{etcd_cfg_path}}"
#     insertafter: '^    - etcd'
#     block: |
#       #Added parameters
#           - --name={{inventory_hostname}}
#           - --listen-peer-urls=http://{{inventory_hostname}}:2380
#           - --initial-cluster-state=existing
#           - --initial-cluster={% for host in groups['masters'] %}{{ hostvars[host]['inventory_hostname'] }}=http://{{ hostvars[host]['inventory_hostname'] }}:2380{% if not loop.last %},{% endif %}{% endfor %}
#   register: update_etc_result
# - name: Update etcd configuration
#   blockinfile:
#     path: "{{etcd_cfg_path}}"
#     insertafter: '^    - etcd'
#     block: |
#       #Added parameters
#           - --name={{inventory_hostname}}
#           - --initial-advertise-peer-urls
#           - http://{{hostvars[inventory_hostname]['ansible_default_ipv4']['address']}}:2380
#           - --listen-peer-urls
#           - http://{{hostvars[inventory_hostname]['ansible_default_ipv4']['address']}}:2380
#           - --initial-cluster-state
#           - existing
#           - --initial-cluster
#           - {% for host in groups['masters'] %}{{ hostvars[host]['inventory_hostname'] }}=http://{{ hostvars[host]['inventory_hostname'] }}:2380{% if not loop.last %},{% endif %}{% endfor %}
#   register: update_etc_result

- name: Write etcd config file
  template: src=etcd.yaml dest={{etcd_cfg_path}} group=root owner=root mode=0700
  register: update_etc_result

- name: Restart kubelet
  service: name=kubelet enabled=yes state=restarted
  when: update_etc_result.changed

- name: "Wait for etcd to come back"
  shell: "while ! (docker ps|grep /etcd); do echo Waiting for etcd;sleep 2; done && while ! (docker ps|grep /kube-apiserver); do echo Waiting for kube-apiserve;sleep 2; done"
  when: update_etc_result.changed

- name: "Change peer URL for master etcd"
  shell: "kubectl -n kube-system exec etcd-{{inventory_hostname}} -- etcdctl member update {{ ETCD_FIRST_PEER }} http://{{inventory_hostname}}:2380"
  environment: "{{kube_cfg_env}}"
  when: update_etc_result.changed
  register: result
  until: result|succeeded
  retries: 30
  delay: 10



- name: Download etcd configuration - {{etcd_cfg_path}}
  fetch:
    src: "{{etcd_cfg_path}}"
    dest: "./kubeconfig/"
    flat: yes
