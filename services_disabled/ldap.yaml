# ------------------- StatefulSet ------------------- #
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  namespace: kube-system
  labels:
    app: ldap
  name: ldap
spec:
  serviceName: ldap
  # changing replicas value will require a manual etcdctl member remove/add
  # command (remove before decreasing and add after increasing)
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      name: "ldap"
      labels:
        app: "ldap"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - ldap
            topologyKey: "kubernetes.io/hostname"
      nodeSelector:
        beta.kubernetes.io/arch: arm
      containers:
        - name: ldap
          image: angelnu/osixia-openldap:latest
          volumeMounts:
            - name: ldap-data
              mountPath: /var/lib/ldap
            - name: ldap-config
              mountPath: /etc/ldap/slapd.d
            - name: ldap-certs
              mountPath: /container/service/slapd/assets/certs
          ports:
            - containerPort: 389
              name: openldap
          env:
            - name: LDAP_LOG_LEVEL
              value: "256"
            - name: LDAP_ORGANISATION
              value: "Nunez Gregoire"
            - name: LDAP_DOMAIN
              value: "angelnu.com"
            - name: LDAP_ADMIN_PASSWORD
              value: "admin"
            - name: LDAP_CONFIG_PASSWORD
              value: "config"
            - name: LDAP_READONLY_USER
              value: "false"
            - name: LDAP_READONLY_USER_USERNAME
              value: "readonly"
            - name: LDAP_READONLY_USER_PASSWORD
              value: "readonly"
            - name: LDAP_RFC2307BIS_SCHEMA
              value: "false"
            - name: LDAP_BACKEND
              value: "mdb"
            - name: LDAP_TLS
              value: "true"
            - name: LDAP_TLS_CRT_FILENAME
              value: "ldap.crt"
            - name: LDAP_TLS_KEY_FILENAME
              value: "ldap.key"
            - name: LDAP_TLS_CA_CRT_FILENAME
              value: "ca.crt"
            - name: LDAP_TLS_ENFORCE
              value: "false"
            - name: LDAP_TLS_CIPHER_SUITE
              value: "SECURE256:+SECURE128:-VERS-TLS-ALL:+VERS-TLS1.2:-RSA:-DHE-DSS:-CAMELLIA-128-CBC:-CAMELLIA-256-CBC"
            - name: LDAP_TLS_VERIFY_CLIENT
              value: "demand"
            - name: LDAP_REPLICATION
              value: "true"
            - name: LDAP_REPLICATION_CONFIG_SYNCPROV
              value: "binddn=\"cn=admin,cn=config\" bindmethod=simple credentials=$LDAP_CONFIG_PASSWORD searchbase=\"cn=config\" type=refreshAndPersist retry=\"60 +\" timeout=1 starttls=critical"
            - name: LDAP_REPLICATION_DB_SYNCPROV
              value: "binddn=\"cn=admin,$LDAP_BASE_DN\" bindmethod=simple credentials=$LDAP_ADMIN_PASSWORD searchbase=\"$LDAP_BASE_DN\" type=refreshAndPersist interval=00:00:00:10 retry=\"60 +\" timeout=1 starttls=critical"
            - name: LDAP_REPLICATION_HOSTS
              value: "#PYTHON2BASH:['ldap://ldap-0', 'ldap://ldap-1', 'ldap://ldap-2']"
            - name: KEEP_EXISTING_CONFIG
              value: "false"
            - name: LDAP_REMOVE_CONFIG_AFTER_SETUP
              value: "true"
            - name: LDAP_SSL_HELPER_PREFIX
              value: "ldap"
      volumes:
        - name: ldap-data
          hostPath:
            path: "/media/data/ldap/db"
        - name: ldap-config
          hostPath:
            path: "/media/data/ldap/config"
        - name: ldap-certs
          hostPath:
            path: "/media/data/ldap/certs"

---

#Also expose as LB with a fix cluster IP so we can use it from other namespaces
kind: Service
apiVersion: v1
metadata:
  name: ldap
  namespace: kube-system
spec:
  clusterIP: 10.111.111.112
  ports:
  - port: 389
  selector:
    app: ldap
---
#For each additional namespace the endpoints and service must be defined
# - add default namespace
kind: "Endpoints"
apiVersion: "v1"
metadata:
  name: ldap
subsets:
  - addresses:
    - ip: "10.111.111.112"
    ports:
    - port: 389
---
kind: Service
apiVersion: v1
metadata:
  name: ldap
spec:
  ports:
  - port: 389
  selector: {}
