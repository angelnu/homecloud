apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: kube-system
  labels:
    app: dex
  name: dex
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dex
  template:
    metadata:
      namespace: kube-system
      labels:
        app: dex
    spec:
      serviceAccountName: dex # This is created below
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
      - image: quay.io/dexidp/dex:v2.25.0
        name: dex
        command: ["/usr/local/bin/dex", "serve", "/etc/dex/cfg/config.yaml"]

        ports:
        - name: http
          containerPort: 5556

        volumeMounts:
        - name: config
          mountPath: /etc/dex/cfg

        env:
      volumes:
      - name: config
        configMap:
          name: dex
          items:
          - key: config.yaml
            path: config.yaml
          - key: googleAuth.json
            path: googleAuth.json
---
apiVersion: v1
kind: Service
metadata:
  namespace: kube-system
  name: dex
spec:
  type: NodePort
  ports:
  - name: dex
    port: 5556
    protocol: TCP
    targetPort: 5556
  selector:
    app: dex
---
# ------------------- Ingress ------------------- #

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: dex
  namespace: kube-system
  annotations:
    ingress.kubernetes.io/ssl-redirect: "true"
spec:
  tls:
  - hosts:
    - oidc.angelnu.com
    secretName: prod-wildcard-angelnu-com-tls
  rules:
  - host: oidc.angelnu.com
    http:
      paths:
      - path: /
        backend:
          serviceName: dex
          servicePort: dex
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: kube-system
  labels:
    app: dex
  name: dex
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dex
rules:
- apiGroups: ["dex.coreos.com"] # API group created by dex
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["create"] # To manage its own resources, dex must be able to create customresourcedefinitions
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dex
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dex
subjects:
- kind: ServiceAccount
  name: dex           # Service account assigned to the dex pod, created above
  namespace: kube-system  # The namespace dex is running in
