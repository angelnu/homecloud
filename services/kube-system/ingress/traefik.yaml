---
# ------------------- ClusterRole ------------------- #

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch



---
# ------------------- ClusterRoleBinding ------------------- #

kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: traefik
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik
subjects:
- kind: ServiceAccount
  name: traefik
  namespace: kube-system


# ------------------- ServiceAccount ------------------- #
---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik
  namespace: kube-system

# ------------------- DaemonSet ------------------- #
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: traefik
  namespace: kube-system
  labels:
    app: traefik
spec:
  selector:
    matchLabels:
      app: traefik
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: traefik
    spec:
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      serviceAccountName: traefik
      terminationGracePeriodSeconds: 60
      hostNetwork: true
      containers:
      - image: traefik:latest
        imagePullPolicy: Always
        name: traefik
        resources:
          requests:
            memory: "30Mi"
            cpu: "30m"
          limits:
            #memory: "128Mi"
            #cpu: "500m"
        ports:
        - name: http
          containerPort: 80
          hostPort: 80
        - name: https
          containerPort: 443
          hostPort: 443
        - name: admin
          containerPort: 8080
        securityContext:
          privileged: true
        args:
        - -d
        - --web
        - --kubernetes
        - --etcd
        - --etcd.endPoint=etcd-lb:2379
        - --etcd.useAPIV3=true
        env:
        - name: DNSMADEEASY_API_KEY
          valueFrom:
            secretKeyRef:
              name: dnsmadeeasy
              key: key
        - name: DNSMADEEASY_API_SECRET
          valueFrom:
            secretKeyRef:
              name: dnsmadeeasy
              key: secret
      dnsPolicy: ClusterFirstWithHostNet
      initContainers:
      - image: k8s.gcr.io/etcd:3.2.24
        #image: angelnu/etcd:3.1.12
        name: waitforconfig
        env:
        - name: ETCDCTL_API
          value: "3"
        command:
        - etcdctl
        - get
        - --endpoints=etcd-lb:2379
        - get
        - foo
---
# ------------------- Service ------------------- #

kind: Service
apiVersion: v1
metadata:
  name: traefik
  namespace: kube-system
spec:
  selector:
    app: traefik
  ports:
    - protocol: TCP
      port: 80
      name: http
    - protocol: TCP
      port: 443
      name: https
    - protocol: TCP
      port: 8080
      name: admin
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: traefik
  namespace: kube-system
  annotations:
      ingress.kubernetes.io/whitelist-source-range: "192.168.2.0/16"
spec:
  rules:
  - host: ingress.angelnu.com
    http:
      paths:
      - path: /
        backend:
          serviceName: traefik
          servicePort: admin
