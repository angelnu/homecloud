apiVersion: v1
kind: Service
metadata:
  name: "etcd"
  namespace: kube-system
  annotations:
    # Create endpoints also if the related pod isn't ready
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  labels:
    app: etcd
spec:
  ports:
  - port: 2379
    name: client
  - port: 2380
    name: peer
  clusterIP: None
  selector:
    app: etcd
---
apiVersion: v1
kind: Service
metadata:
  name: "etcd-lb"
  namespace: kube-system
  labels:
    app: etcd
spec:
  ports:
  - port: 2379
    name: client
  selector:
    app: etcd
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: kube-system
  name: etcd
spec:
  serviceName: etcd
  # changing replicas value will require a manual etcdctl member remove/add
  # command (remove before decreasing and add after increasing)
  replicas: 3
  selector:
    matchLabels:
      app: etcd
  template:
    metadata:
      name: "etcd"
      labels:
        app: "etcd"
    spec:
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: masterIndex
                operator: In
                values:
                - "0"
                - "1"
                - "2"
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                - key: masterIndex
                  operator: In
                  values:
                  - "0"
            - weight: 50
              preference:
                matchExpressions:
                - key: masterIndex
                  operator: In
                  values:
                  - "1"
            - weight: 1
              preference:
                matchExpressions:
                - key: masterIndex
                  operator: In
                  values:
                  - "2"
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - etcd
            topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 5
      containers:
      - name: "etcd"
        #image: angelnu/etcd:3.1.17
        image: k8s.gcr.io/etcd:3.2.24
        imagePullPolicy: Always
        resources:
          requests:
            memory: "25Mi"
            cpu: "30m"
          limits:
            #memory: "128Mi"
            #cpu: "500m"
        ports:
        - containerPort: 2379
          name: client
        - containerPort: 2380
          name: peer
        env:
        - name: CLUSTER_SIZE
          value: "3"
        - name: SET_NAME
          value: "etcd"
        - name: ETCDCTL_API
          value: "3"
        - name: ETCD_INITIAL_CLUSTER_STATE
          #After the first initialisation the STATE should be changes to existing
          #This is needed in case a node has to be removed and readded again
          #To clean up then go in a working node and do etcdctl member remove and then add
          #value: "existing"
          value: "new"
        volumeMounts:
        - name: data
          mountPath: /var/run/etcd
        command:
          - "/bin/sh"
          - "-ecx"
          - |
            IP=$(hostname -i)

            for i in $(seq 0 $((${CLUSTER_SIZE} - 1))); do
              while true; do
                echo "Waiting for ${SET_NAME}-${i}.${SET_NAME} to come up"
                ping -W 1 -c 1 ${SET_NAME}-${i}.${SET_NAME} > /dev/null && break
                sleep 1s
              done
            done

            PEERS=""
            for i in $(seq 0 $((${CLUSTER_SIZE} - 1))); do
                PEERS="${PEERS}${PEERS:+,}${SET_NAME}-${i}=http://${SET_NAME}-${i}.${SET_NAME}:2380"
            done

            # start etcd. If cluster is already initialized the `--initial-*` options will be ignored.
            exec etcd --name ${HOSTNAME} \
              --listen-peer-urls http://${IP}:2380 \
              --listen-client-urls http://${IP}:2379,http://127.0.0.1:2379 \
              --advertise-client-urls http://${HOSTNAME}.${SET_NAME}:2379 \
              --initial-advertise-peer-urls http://${HOSTNAME}.${SET_NAME}:2380 \
              --initial-cluster-token etcd-cluster-1 \
              --initial-cluster ${PEERS} \
              --data-dir /var/run/etcd/default.etcd
      volumes:
      - name: data
        hostPath:
          path: "/media/data/ingress-etcd"
          type: DirectoryOrCreate
---
