apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: StatefulSet
metadata:
  namespace: kube-system
  name: openvpn
  labels:
    app: openvpn
spec:
  serviceName: openvpn
  replicas: 1
  selector:
    matchLabels:
      app: openvpn
  template:
    metadata:
      namespace: kube-system
      labels:
        app: openvpn
    spec:
      containers:
      - name: openvpn
        image: angelnu/openvpn-client
        imagePullPolicy: Always
        resources:
          requests:
            memory: "6Mi"
            cpu: "100m"
          limits:
            #memory: "128Mi"
            #cpu: "500m"
        livenessProbe:
          exec:
            command:
            - ping
            - -c3
            - -w15
            - casa96.angelnu.com
          periodSeconds: 60
          failureThreshold: 15
        ports:
        - containerPort: 53
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
        env:
        - name: DNS
          value: "true"
        volumeMounts:
          - mountPath: "/vpn"
            name: "config"
      #DHCP server
      - name: dhcp
        image: angelnu/openvpn-helper
        imagePullPolicy: Always
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
        command:
        - /usr/local/bin/dnsmasq.sh

      #Configure as router
      initContainers:
      - name: vxlan
        #image: armhf/alpine:latest
        image: angelnu/openvpn-helper
        imagePullPolicy: Always
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
        command:
        - /usr/local/bin/router.sh

      volumes:
      - name: config
        configMap:
          name: openvpn
          defaultMode: 0600
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - openvpn
              topologyKey: "kubernetes.io/hostname"
---
kind: Service
apiVersion: v1
metadata:
  name: openvpn
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: dns #I need at least one port to get a DNS entry
    port: 53
    targetPort: 53
  selector:
    app: openvpn
