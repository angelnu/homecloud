apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: oauth2-proxy
  name: oauth2-proxy
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: oauth2-proxy
  template:
    metadata:
      labels:
        k8s-app: oauth2-proxy
    spec:
      nodeSelector:
        kubernetes.io/arch: amd64
      containers:
      - args:
        - "--cookie-domain=.angelnu.com"
        - "--whitelist-domain=.angelnu.com"
        - "--cookie-secure=true"
        - "--pass-access-token"
        - "--set-basic-auth=false"
        - "--set-authorization-header"

        #set X-Auth-Request-User and X-Auth-Request-Email response headers (useful in Nginx auth_request mode)
        - "--set-xauthrequest"

        #- --cookie-expire=672h
        #- "-cookie-refresh=1h"
        #- --cookie-httponly=true
        #- --request-logging=false

        - "--provider=oidc"
        - "--provider-display-name='Home OpenID Connect'"
        - --email-domain=*
        #- --upstream=file:///dev/null
        - --cookie-secure=false
        - "--proxy-prefix="
        - --http-address=0.0.0.0:4180
        - "--redirect-url=https://ingress-auth.angelnu.com/callback"
        - "--oidc-issuer-url=https://oidc.angelnu.com"
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: oauth2-proxy
              key: OAUTH2_PROXY_CLIENT_ID
        - name: OAUTH2_PROXY_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth2-proxy
              key: OAUTH2_PROXY_CLIENT_SECRET
        - name: OAUTH2_PROXY_COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth2-proxy
              key: OAUTH2_PROXY_COOKIE_SECRET
        image: quay.io/pusher/oauth2_proxy:latest
        imagePullPolicy: Always
        name: oauth2-proxy
        ports:
        - containerPort: 4180
          protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: oauth2-proxy
  name: oauth2-proxy
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 4180
    protocol: TCP
    targetPort: 4180
  selector:
    k8s-app: oauth2-proxy

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oauth2-proxy
  namespace: kube-system
spec:
  tls:
  - hosts:
    - ingress-auth.angelnu.com
    secretName: prod-wildcard-angelnu-com-tls
  
  rules:
  - host: ingress-auth.angelnu.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: oauth2-proxy
            port:
              number: 4180