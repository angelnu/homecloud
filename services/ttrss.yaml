apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ttrss
spec:
  serviceName: ttrss
  selector:
    matchLabels:
      app: ttrss
  replicas: 1
  template:
    metadata:
      name: ttrss
      labels:
        app: ttrss
    spec:
      hostname: ttrss
      nodeSelector: #Only schedule in the big server
        kubernetes.io/hostname: server.home.angelnu.com
      containers:
      - name: ttrss
        image: angelnu/ttrss:latest
        imagePullPolicy: Always
        resources:
          requests:
            memory: "100Mi"
            cpu: "50m"
          limits:
            #memory: "128Mi"
            #cpu: "500m"
        env:
        - name: TTRSS_PROTO
          value: https
        - name: TTRSS_URL
          value: rss.angelnu.com
        - name: TTRSS_PORT
          value: ""
        - name: DB_HOST
          value: ttrss-postgres
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: ttrss-postgres-secret
              key: dbname
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: ttrss-postgres-secret
              key: username
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: ttrss-postgres-secret
              key: password
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            port: 8080
          initialDelaySeconds: 120 # 2 minutes
          timeoutSeconds: 10
          failureThreshold: 6 # 1 minutes
      initContainers:
      - image: postgres:alpine
        name: waitforpostgres
        command:
        - "pg_isready"
        - "-h"
        - "ttrss-postgres"
        - "-p"
        - "5432"

---
# -------------------- Service ------------------- #

kind: Service
apiVersion: v1
metadata:
  labels:
    app: ttrss
  name: ttrss
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: ttrss
---

# ------------------- Ingress ------------------- #

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ttrss
  annotations:
    traefik.frontend.priority: "1"
    ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
  - host: rss.angelnu.com
    http:
      paths:
      - path: /
        backend:
          serviceName: ttrss
          servicePort: http
