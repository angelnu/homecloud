apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sonarr
spec:
  serviceName: sonarr
  selector:
    matchLabels:
      app: sonarr
  replicas: 1
  template:
    metadata:
      name: sonarr
      labels:
        app: sonarr
    spec:
      hostname: sonarr
      nodeSelector: #Only schedule in the big server
        kubernetes.io/hostname: server.angelnu.com
      containers:
      - name: sonarr
        image: linuxserver/sonarr:latest
        imagePullPolicy: Always
        resources:
          requests:
            memory: "115Mi"
            cpu: "800m"
          limits:
            #memory: "128Mi"
            #cpu: "500m"
        ports:
        - containerPort: 8989
        livenessProbe:
          exec:
            command:
            - wget #no ping in this container
            - rss.angelnu.com
          initialDelaySeconds: 60
          periodSeconds: 300
          failureThreshold: 2
        env:
        - name: TZ
          value: Europe/Berlin
        volumeMounts:
        - mountPath: /config
          name: config
          subPath: sonarr/config
        - mountPath: /downloads
          name: downloads
          subPath: downloaders/transmission
        - mountPath: /tv
          name: downloads
          subPath: 1_tv
        - mountPath: /videos
          name: videos
# VPN boiler-plate 1 (insert at the end of volumeMounts)
        - name: resolv
          mountPath: /etc/resolv_vpn.conf
          subPath: resolv.conf
      - name: vxlan
        image: angelnu/openvpn-helper
        imagePullPolicy: Always
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
        volumeMounts:
        - name: resolv
          mountPath: /etc_shared
# end of VPN boiler-plate 1
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: nfs-kubernetes
      - name: downloads
        persistentVolumeClaim:
          claimName: nfs-downloads
      - name: videos
        persistentVolumeClaim:
          claimName: nfs-video

# VPN boiler-plate 2 (append at the end of the volumes section)
      - name: resolv
        emptyDir: {}
      initContainers:
      - name: init-vxlan
        image: angelnu/openvpn-helper
        imagePullPolicy: Always
        securityContext:
          capabilities:
            add:
              - NET_ADMIN
        env:
        - name: FIRST_BOOT
          value: "true"
        volumeMounts:
        - name: resolv
          mountPath: /etc_shared
# end of VPN boiler-plate 2

---
# -------------------- Service ------------------- #

kind: Service
apiVersion: v1
metadata:
  labels:
    app: sonarr
  name: sonarr
spec:
  clusterIP: None
  ports:
  - name: http
    port: 80
    targetPort: 8989
  selector:
    app: sonarr
---

# ------------------- Ingress ------------------- #

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: sonarr
  annotations:
    ingress.kubernetes.io/whitelist-source-range: "192.168.2.0/16"
spec:
  rules:
  - host: tv.home.angelnu.com
    http:
      paths:
      - path: /
        backend:
          serviceName: sonarr
          servicePort: http
